_    = exports._    = require './underscore'
op   = exports.op   = require 'operator'
guid = exports.guid = require './guid'
exports import guid

# Root object -- `window` in the browser, `global` in Node.
root = exports.root = do -> this or eval('this')

# Stub out console with empty methods
root.console or= _ <[ log info warn error dir table group groupCollapsed groupEnd ]> .synthesize -> [it, op.nop]


# Stub out CommonJS modules that might be included as normal JS globals

moduleShim = (name, mod) ->
    return unless mod
    if require.define?
        require.define  name, (require, module, exports) -> module.exports = mod
    else if define?
        define          name, (require, exports, module) -> module.exports = mod

try require 'd3'        catch ex then moduleShim 'd3',       root.d3
try require 'knockout'  catch ex then moduleShim 'knockout', root.ko


# watch css files for changes (only in dev mode)
# root.livecss?.watchAll?()

if root.livecss?.watch?
    root.jQuery? 'head link.livecss' .each (i, el) ->
        root.livecss.watch el

### Extend jQuery with useful functions

/**
 * @returns {Object} Object of the data from the form, via `.serializeArray()`.
 */
root.jQuery?.fn.formData = ->
    _.synthesize do
        this.serializeArray()
        -> [it.name, it.value]

/**
 * Invokes a jQuery method on each element, returning the array of the result.
 * @returns {Array} Results.
 */
root.jQuery?.fn.invoke = (method, ...args) ->
    for el, idx of this
        jQuery(el)[method] ...args


emitters = exports.emitters = require 'emitters'
exports import emitters

parser    = exports.parser    = require './parser'
AliasDict = exports.AliasDict = require './aliasdict'
Cascade   = exports.Cascade   = require './cascade'

