d3 = require 'd3'
Seq = require 'seq'

{ _, op,
} = limn = require 'limn/client'
{ ChartElementData,
} = require '../chart-element-data'
{ TimeseriesChartElement,
} = require './timeseries-element'


/**
 * @class
 * @extends ChartElement
 */
LineChartElement = exports.LineChartElement = TimeseriesChartElement.extend do # {{{
    __bind__  : <[ ]>
    typeName  : 'LineChartElement'
    tagName   : 'g'
    className : 'line-chart-element chart-element'
    
    viewEvents :
        'layout:chart' : 'onLayoutChart'
    
    /**
     * the unique human-friendly text that describes this metric
     */
    label: null
    
    /**
     * the unique number that this metric can use to relate itself to other metric-specific objects
     */
    index: null
    
    /**
     * the data for this metric
     */
    data: null
    
    constructor: function LineChartElement
        TimeseriesChartElement ...
    
    initialize: ->
        LineChartElement.__super__.initialize ...
    
    onLayoutChart: ->
        # report as a metric to the chart
        dateCol = @model.getDateColumn()
        @data = @model.getData()
        @label = "Get Label #{@model.cid}"
        @index = @chart.addMetric @label, dateCol, @data
        
        @sel.selectAll 'path.line'
            # NOTE: @data is inside an array.  Path data is not descending from two dimensional matrices
            .data [@data]
            .enter().append 'path'
                .attr 'd', @chart.lineGenerator
                .classed 'line', true
                .attr 'data-metricIndex', @index
                .style 'stroke', @chart.colorScale @label
        
    
# }}}

