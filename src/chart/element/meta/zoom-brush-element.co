d3 = require 'd3'
Seq = require 'seq'

{ _, op,
} = limn = require 'limn/client'
{ ChartElementData,
} = require '../chart-element-data'
{ ChartElement,
} = require '../chart-element'


/**
 * @class
 * @extends ChartElement
 */
ZoomBrushChartElement = exports.ZoomBrushChartElement = ChartElement.extend do # {{{
    __bind__       : <[ onLayoutChart ]>
    typeName       : 'ZoomBrushChartElement'
    tagName        : 'g'
    className      : 'brush'
    viewEvents :
        'layout:chart'  : 'onLayoutChart'
    
    
    constructor : function ZoomBrushChartElement
        ChartElement ...
    
    initialize : ->
        ChartElement::initialize ...
    
    onLayoutChart: (clipIds) ->
        zoomBrush = d3.svg.brush().x(@chart.xScale)
        zoomBrush.on 'brushend', ->
            e = d3.event.target.extent()
            unless @chart.xDistanceIsInsignificant e[0], e[1]
                # TODO: handle this event and redraw chart / or use d3.behavior.zoom
                @trigger 'changed:data', e
                # TODO: make a prettier way to get jQuery selections out of d3 elements
                @$ @sel[0] .toggle false
            zoomBrush.clear()
            @sel.call zoomBrush
        
        @sel.call zoomBrush
        @sel.selectAll 'rect'
            .attr 'height', @chart.layout.viewport.h
    
    
    
# }}}
