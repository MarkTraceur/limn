d3 = require 'd3'
Seq = require 'seq'

{ _, op,
} = limn = require 'limn/client'
{ ChartElementEditView,
} = require './chart-element-edit-view'


/**
 * @class
 * @extends ChartElementEditView
 */
LineChartElementEditView = exports.LineChartElementEditView = ChartElementEditView.extend do # {{{
    __bind__       : <[ show hide ]>
    tagName        : 'section'
    className      : 'line-chart-element-edit chart-element-edit'
    elementType    : 'LineChartElement'
    template       : require '../../template/chart/edit/line-element-edit'
    
    callOnReturnKeypress : 'onChange'
    events:
        'click .close'       : 'hide'
        'keydown form input' : 'onReturnKeypress'
    
    
    constructor: function LineChartElementEditView
        ChartElementEditView ...
    
    initialize: ->
        LineChartElementEditView.__super__.initialize ...
    
    
    
    onLayoutChart: ->
        # Unregister first to avoid duplicate listeners
        @chartElement.$el
            .off 'click', 'path', @show
            .on  'click', 'path', @show
    
    onChange: (evt) ->
        attrs = _.uncollapseObject @$('form.line-chart-element-edit-form').formData()
        if data = attrs.data
            data.source_col = parseInt that if data.source_col?
            attrs.data = _.extend {}, @model.get('data'), data
        # attrs.color = that if evt?.color
        
        # same = _.isEqual @model.attributes, attrs
        # console.log "#this.onChange! (same? #same)"
        # _.dump @model.attributes, 'old', not same
        # _.dump attrs, 'new', not same
        
        @model.set attrs
    
# }}}

