d3 = require 'd3'
Seq = require 'seq'
moment = require 'moment'

_ = require '../util/underscore'
{ BaseModel, BaseList, ModelCache, BaseView,
} = require '../base'
{ Graph,
} = require './graph-model'
{ GraphView,
} = require './graph-view'
{ ChartElementData, ChartElementDataList, ChartElement, ChartView, ChartEditView, 
} = require '../chart'
{ DataView, DataSetView, DataSet, DataSource,
} = require '../data'

root = do -> this




/**
 * @class View for a graph visualization encapsulating the editing UI for:
 * - Graph metadata, such as name, description, slug
 * - Chart options, using ChartOptionScaffold
 */
GraphEditView = exports.GraphEditView = BaseView.extend do # {{{
    __bind__  : <[ wait unwait onGraphReady onDataReady ]>
    className : 'graph-edit graph'
    template  : require '../template/graph/graph-edit'
    
    /**
     * The chart viewport element.
     * @type ChartView
     */
    chart : null
    
    events : {}
    viewEvents : {}
    
    # TODO: actually apply this
    routes:
        'graphs/:graph/edit/info'                   : 'showInfoPane'
        'graphs/:graph/edit/data/metric/:metric'    : 'showDataPane'
        'graphs/:graph/edit/data'                   : 'showDataPane'
        'graphs/:graph/edit/options/:optionsFilter' : 'showOptionsPane'
        'graphs/:graph/edit/options'                : 'showOptionsPane'
    
    
    
    
    constructor: function GraphEditView
        BaseView ...
    
    initialize : (o={}) ->
        @model or= new Graph
        GraphEditView.__super__.initialize ...
        @model.once 'ready', @onGraphReady .load()
    
    onGraphReady: ->
        # console.log "#this.onGraphReady()!", @model
        @model.once 'data-ready', @onDataReady .loadData()
    
    onDataReady: ->
        # console.log "#this.onDataReady()!", @model
        # console.log "  --> elements: #{@model.elements}"
        @addSubview @chart = new ChartEditView { @model }
        @render()
    
    
    ### Persistence {{{
    
    
    
    ### }}}
    ### Rendering {{{
    
    
    
    ### }}}
    ### Event Handlers {{{
    
    
    
    
    # }}}
    
# }}}

