ko = require 'knockout'
d3 = require 'd3'

{ GraphNode,
} = require '../graph-node'

Trait = require '../graph-node-trait'



/**
 * @class
 * @extends GraphNode
 */
class exports.GridNode extends GraphNode
    nodeType : 'grid'
    traits   : [
        Trait.VIS_NODE
        Trait.LEAF
    ]
    @registerType()
    
    
    ->
        super ...
        
        # Trigger the grid computed to auto-update
        # once we build for the first time.
        @on 'watch-build', @grid
    
    
    
    grid: @computed ->
        return null unless @el() and @sel
        return null unless dimension = @options()?.dimension()
        return null unless scales = @root().scales()
        console.log "#this.grid!"
        
        @sel.classed "#{@options().dimension()}Grid", true
        
        switch dimension
            case 'x'
                ticks = scales.xScale.ticks(20)
                scale = scales.xScale
                enter =
                    y1: 0
                    y2: @root().height()
                transition =
                    x1: scales.xScale
                    x2: scales.xScale
            
            case 'y'
                ticks = scales.yScale.ticks()
                scale = scales.yScale
                enter =
                    x1: 0
                    x2: @root().width()
                transition =
                    y1: scales.yScale
                    y2: scales.yScale
        
        gridLinesData = @sel.selectAll 'line'
            .data ticks
        gridLinesData.enter().append 'line'
            .attr 'vector-effect': 'non-scaling-stroke'
            .attr enter
        gridLinesData.transition()
            .attr transition
        gridLinesData.exit().remove()
    

