_  = require 'underscore'
ko = require 'knockout'
d3 = require 'd3'

{ TimeseriesNode,
} = require './timeseries-node'


/**
 * @class
 * @extends TimeseriesNode
 */
class exports.LineNode extends TimeseriesNode
    nodeType : 'line'
    @registerType()
    
    -> super ...
    
    
    buildElement: (parentElement) ->
        super parentElement
        
        @sel.append 'path'
            .classed 'metricLine', true
            .style 'stroke-width', 5
            .style 'fill', 'none'
            .attr 'vector-effect', 'non-scaling-stroke'
    
    /*
    build: (parentElement) ->
        @sel = parentElement.append 'g'
        
        # make sure we can receive updates before we broadcast the metric
        @chart.scales.subscribe (updated) ~>
            @renderLine.call this if updated
        
        @chart.metrics.push(this)
        
        @sel.append 'path'
            .classed 'metricLine', true
            .style 'stroke-width', 5
            .style 'fill', 'none'
            .attr 'vector-effect', 'non-scaling-stroke'
    
    renderLine: ->
        @sel.selectAll 'path.metricLine'
            .attr 'data-metricIndex', @columnHeader()
            .style 'stroke', ~> @chart.colorScale @columnHeader()
            .data [@column()]
            .transition()
                .attr 'd', @chart.lineGenerator
    */
