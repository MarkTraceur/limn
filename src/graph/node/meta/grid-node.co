_  = require 'underscore'
ko = require 'knockout'
d3 = require 'd3'

{ GraphNodeData,
} = require '../graph-node-data'
{ GraphNode,
} = require '../graph-node'

Trait = require '../graph-node-trait'



/**
 * @class
 * @extends GraphNodeData
 */
class exports.GridNodeData extends GraphNodeData
    @registerType 'grid'
    
    defaults: ->
        dimension : null # x | y
        options   : 
            ticks : null
            stroke :
                width   : 1
                color   : '#CACACA'
    
    attributeTypes: ->
        {}
    
    -> super ...



/**
 * @class
 * @extends GraphNode
 */
class exports.GridNode extends GraphNode
    @registerType 'grid'
    traits : [
        Trait.META_NODE
        Trait.BG_LAYER
        Trait.SVG
        Trait.LEAF
    ]
    
    
    -> super ...
    
    
    render: ->
        scales = @root().scales()
        dimension = @options().dimension()
        # console.log "#this.grid!"
        
        @sel.classed dimension+'-grid', true
        
        switch dimension
            case 'x'
                ticks = scales.xScale.ticks(20)
                scale = scales.xScale
                size = @root().height()
                enter =
                    y1: -1 * size
                    y2:  2 * size
                transition =
                    x1: scale
                    x2: scale
            
            case 'y'
                ticks = scales.yScale.ticks()
                scale = scales.yScale
                size = @root().width()
                enter =
                    x1: -1 * size
                    x2:  2 * size
                transition =
                    y1: scale
                    y2: scale
        
        gridLinesData = @sel.selectAll 'line'
            .data ticks
        gridLinesData.enter().append 'line'
            .attr 'vector-effect': 'non-scaling-stroke'
            .attr enter
        gridLinesData.transition()
            .attr transition
        gridLinesData.exit().remove()
    

