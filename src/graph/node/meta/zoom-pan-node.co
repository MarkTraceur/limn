_  = require 'underscore'
ko = require 'knockout'
d3 = require 'd3'

{ GraphNode,
} = require '../graph-node'

Trait = require '../graph-node-trait'



/**
 * @class
 * @extends GraphNode
 */
class exports.ZoomPanNode extends GraphNode
    nodeType : 'zoom-pan'
    traits   : [
        Trait.VIS_NODE
        Trait.SVG
        Trait.LEAF
    ]
    @registerType()
    
    
    -> super ...
    
    
    render: ->
        return unless root = @root()
        return unless scales = root.scalesIfValid()
        console.log "#this.zoom!"
        
        return if @behavior
        
        @behavior = d3.behavior.zoom().scaleExtent [1,10]
        @behavior.on 'zoom', ~> @zooming.call this
        
        @behavior.x scales.xScale
        @behavior.y scales.yScale
        
        d3.select('svg').call @behavior
    
    zooming: ->
        scale = d3.event.scale
        translate = d3.event.translate
        @sparent.attr 'transform', "translate(#{translate[0]},#{translate[1]}) scale(#scale)"
