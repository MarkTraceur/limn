_  = require 'underscore'
ko = require 'knockout'
d3 = require 'd3'
moment = require 'moment'

{ GraphNodeData,
} = require '../graph-node-data'
{ GraphNode,
} = require '../graph-node'

Trait = require '../graph-node-trait'



/**
 * @class
 * @extends GraphNodeData
 */
class exports.ZoomBrushNodeData extends GraphNodeData
    @registerType 'zoom-brush'
    
    defaults: ->
        options :
            allowX : true
            allowY : true
    
    attributeTypes: ->
        {}
    
    -> super ...



/**
 * @class
 * @extends GraphNode
 */
class exports.ZoomBrushNode extends GraphNode
    @registerType 'zoom-brush'
    traits : [
        Trait.VIS_NODE
        Trait.SVG
        Trait.LEAF
        Trait.FG_LAYER
    ]
    
    
    -> super ...
    
    
    render: ->
        return unless viewport = @viewport()
        return unless xScale   = viewport.xZoomScale()
        return unless yScale   = viewport.yZoomScale()
        
        if @brush
            @brush.x xScale .y yScale
            @sel.call @brush
            return
        
        @brush = d3.svg.brush()
            .x xScale
            .y yScale
            .on 'brushend', @onBrushEnd.bind this
        
        @sel.call @brush
        @sel.select 'rect.background'
            .attr 'pointer-events', 'all'
            .on 'dblclick', ~>
                @hideTrackingCircles() # TODO: LineNode should listen for zoom event
                @viewport().resetZoom()
                window.getSelection?().removeAllRanges()
                document.selection?.empty()
    
    
    onBrushEnd: ->
        [[x0,y0], [x1,y1]] = extent = @brush.extent()
        if @extentIsSignificant extent
            @viewport().zoomInto x0,y0, x1,y1
        @brush.clear()
        @sel.call @brush
        @hideTrackingCircles() # TODO: LineNode should listen for zoom event
    
    
    hideTrackingCircles: ->
        @viewport().sel.selectAll 'circle.tracking'
            .attr { cx: -1000, cy: -1000 }
    
    
    extentIsSignificant: (extent) ->
        [[x0,y0], [x1,y1]] = extent
        x1 - x0 > 1000ms
    
    
